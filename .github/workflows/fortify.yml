# fortify.yml
# --------------------------------------------------------------------------------
# Fortify AST Scan Workflow for Cops & Robbers â€“ FiveM Game Mode
#
# This workflow packages the code and dependencies, runs a SAST scan using Fortify,
# and can optionally export vulnerabilities to GitHub Security Code Scanning.
#
# Note: Customize the optional environment variables as needed. For instance,
# the FOD_RELEASE variable is set to "CopsAndRobbers:Main" for this project.
#
# For further assistance, please refer to Fortify documentation.
# --------------------------------------------------------------------------------

name: Fortify AST Scan - Cops & Robbers

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '26 9 * * 6'
  workflow_dispatch:

jobs:
  Fortify-AST-Scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      # Check out source code
      - name: Check Out Source Code
        uses: actions/checkout@v4

      # Setup Java (required for Fortify utilities)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      # Run Fortify AST Scan using the updated Fortify GitHub Action
      - name: Run FoD SAST Scan
        uses: fortify/github-action@latest
        with:
          sast-scan: true
        env:
          # Required configuration for Fortify on Demand
          FOD_URL: https://ams.fortify.com
          FOD_TENANT: ${{ secrets.FOD_TENANT }}
          FOD_USER: ${{ secrets.FOD_USER }}
          FOD_PASSWORD: ${{ secrets.FOD_PAT }}
          FOD_RELEASE: "CopsAndRobbers:Main"
          # Optional configurations (uncomment and adjust as needed)
          # EXTRA_PACKAGE_OPTS: -oss
          # EXTRA_FOD_LOGIN_OPTS: --socket-timeout=60s
          # DO_WAIT: true
          # DO_EXPORT: true
          # For Fortify Hosted/SSC integration:
          # SSC_URL: ${{ secrets.SSC_URL }}
          # SSC_TOKEN: ${{ secrets.SSC_TOKEN }}
          # SC_SAST_TOKEN: ${{ secrets.SC_SAST_TOKEN }}
          # SC_SAST_SENSOR_VERSION: ${{ vars.SC_SAST_SENSOR_VERSION }}
          # EXTRA_SC_SAST_LOGIN_OPTS: --socket-timeout=60s
          # SSC_APPVERSION: CopsAndRobbers:Main
          # EXTRA_PACKAGE_OPTS: -bv myCustomPom.xml
          # DO_WAIT: true
          # DO_EXPORT: true
